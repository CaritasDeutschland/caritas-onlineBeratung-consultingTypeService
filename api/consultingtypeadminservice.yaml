openapi: 3.0.1
info:
  title: will be replaced
  description: This information will be replaced by the SpringFox config information
  version: 0.0.1
servers:
  - url: /
paths:
  /consultingtypeadmin:
    get:
      tags:
        - root-controller
      summary: 'Returns the hal root entry point. [Authorization: Role: consulting-type-admin]'
      operationId: getRoot
      responses:
        200:
          description: OK - successfull operation
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RootDTO'
        401:
          description: UNAUTHORIZED - no/invalid role/authorization
      security:
        - Bearer: [ ]
  /consultingtypeadmin/consultingtypes:
    get:
      tags:
        - admin-user-controller
      summary: 'Returns the full list of consulting types [Authorization: Role: consulting-type-admin]'
      operationId: getConsultingTypes
      parameters:
        - name: page
          in: query
          description: Number of page where to start in the query (1 = first page)
          required: true
          schema:
            type: integer
            example: 1
        - name: perPage
          in: query
          description: Number of items which are being returned per page
          required: true
          schema:
            type: integer
            example: 20
      responses:
        200:
          description: OK - successfull operation
          content:
            'application/hal+json':
              schema:
                $ref: '#/components/schemas/ConsultingTypeAdminResultDTO'
        400:
          description: BAD REQUEST - invalid/incomplete request or body object
        401:
          description: UNAUTHORIZED - no/invalid role/authorization
        500:
          description: INTERNAL SERVER ERROR - server encountered unexpected condition
      security:
        - Bearer: [ ]

components:
  schemas:
    RootDTO:
      type: object
      required:
        - _links
      properties:
        _links:
          $ref: '#/components/schemas/RootLinks'

    RootLinks:
      type: object
      required:
        - self
      properties:
        self:
          $ref: '#/components/schemas/HalLink'

    HalLink:
      type: object
      required:
        - href
      properties:
        href:
          type: string
        method:
          type: string
          enum: [ GET, POST, DELETE, PUT ]
        templated:
          type: boolean

    PaginationLinks:
      type: object
      required:
        - self
      properties:
        self:
          $ref: '#/components/schemas/HalLink'
        next:
          $ref: '#/components/schemas/HalLink'
        previous:
          $ref: '#/components/schemas/HalLink'

    ConsultingTypeAdminResultDTO:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ConsultingTypeResultDTO'
        _links:
          $ref: '#/components/schemas/PaginationLinks'
        total:
          type: integer

    ConsultingTypeResultDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: "schwangerschaftsberatung"
        languageFormal:
          type: boolean
          example: false
        roles:
          $ref: '#/components/schemas/RoleDTO'
        sendWelcomeMessage:
          type: boolean
          example: true
        welcomeMessage:
          type: string
          example: Willkommen bei der Schwangerschaftsberatung
        monitoring:
          type: boolean
          example: true
        feedbackChat:
          type: boolean
          example: true
        notifications:
          $ref: '#/components/schemas/NotificationDTO'

    RoleDTO:
      type: object
      properties:
        consultant:
          $ref: '#/components/schemas/RoleConsultantDTO'

    RoleConsultantDTO:
      type: object
      properties:
        roleNames:
          type: array
          items:
            type: string

    NotificationDTO:
      type: object
      properties:
        newMessage:
          $ref: '#/components/schemas/NewMessageDTO'

    NewMessageDTO:
      type: object
      properties:
        teamSession:
          $ref: '#/components/schemas/TeamSessionDTO'

    TeamSessionDTO:
      type: object
      properties:
        toConsultant:
          $ref: '#/components/schemas/ToConsultantDTO'

    ToConsultantDTO:
      type: object
      properties:
        allTeamConsultants:
          type: boolean
          example: true

  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
